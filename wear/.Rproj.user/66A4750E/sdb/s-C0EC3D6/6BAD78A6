{
    "contents" : "#' Activity Summary--Standing and Stepping\n#'\n#' Summarize Standing and Stepping activity measures\n#' @param final.dat cleaned final data that is between record getup time and sleep time\n\n#' @return total.number.of.activity.bouts Total number of activity bouts\n#' @return mean.activity.bout.length Average length of activity bout\n#' @return prop.of.activity.time.greater.5min Proportions of activity greater than 5 minutes\n#' @return prop.of.activity.time.greater.10min Proportions of activity greater than 10 minutes\n#' @return prop.of.activity.time.greater.30min Proportions of activity greater than 30 minutes\n#' @return total.activity.time.greater.5min Total activity time in the bouts greater than 5 minutes\n#' @return total.activity.time.greater.10min Total activity time in the bouts greater than 10 minutes\n#' @return total.activity.time.greater.30min Total activity time in the bouts greater than 30 minutes\n#' @return percentile.activity.time.5 5\\% percentile of activity bouth length\n#' @return percentile.activity.time.25 25\\% percentile of activity bouth length\n#' @return percentile.activity.time.50 50\\% percentile of activity bouth length\n#' @return percentile.activity.time.75 75\\% percentile of activity bouth length\n#' @return percentile.activity.time.95 95\\% percentile of activity bouth length\n#' @return alpha.activity alpha of activity time, see details.\n#' @return gini.index.activity Gini index of activity\n#' @return stepping.to.standing.ratio Ratio of stepping to standing, the ratio of total stepping hours to standing hours\n#' @return table A table that combine all outputs\n#' @details  alpha.activity is defined by \\code{1+1/M}, where \\code{M} is the average of \\code{log(activity bout length /minimum activity bout length)}.\n\n#' @examples  data(sampledata);Activity_summary(sampledata)\n#' @export\n#'\n\nActivity_summary=function(final.dat){\n  library(reldist)\n  dat=final.dat\n\n  if(is.numeric(dat$Time)==F) ####if  is.numeric(dat$Time)==F, we need further modification of time in next step\n  {\n    ee<-as.character(dat$Time)\n    max.length<-max(nchar(ee))\n    ee[nchar(ee)!=max.length]<-\"#1899-12-30 00:00:00#\"\n    #### use character type, may not be good\n    ee.new<- (as.numeric( as.POSIXlt( substr(ee, 2, max.length-1 )  )    )+2209190400)/24/60/60\n    #### use interval type, this is the best\n    start.ee<-  min(which(dat[,2]>0))-1\n    if (start.ee>1)\n    {\n      ee.new.int.type <-c( ee.new[1:((start.ee)-1)],ee.new[start.ee]+(dat$DataCount[start.ee:nrow(dat)]/10/24/60/60)  )\n    }else\n    {    ee.new.int.type <-ee.new[start.ee]+(dat$DataCount[start.ee:nrow(dat)]/10/24/60/60)\n    } #### if interval type has large difference with character type, use character type\n    int.dif.char<-which(abs(ee.new-ee.new.int.type)>0.1 )\n    ee.new.int.type[int.dif.char]<-ee.new[int.dif.char]\n    ####\n    dat<-cbind(ee.new.int.type,dat[,2:6])\n  }\n  final.dat<-dat[,c(1,3,4,6)]\n  colnames(final.dat)<-c(\"date.time\",\"Interval\",\"ActivityCode\", \"METs\")\n  final.dat=subset(final.dat,date.time!=0.625) #delete rows with time as #1899-12-30 00:00:00#\n\ntemp.mat=final.dat\n\n\n  temp.mat.for.activity<- temp.mat\n  temp.mat.for.activity$Activity[temp.mat.for.activity$Activity==1]<-2\n  end.pos<-cumsum(rle(temp.mat.for.activity$Activity)$lengths)\n  start.pos<-c(0,end.pos[1:(length(end.pos)-1)])+1\n  ############### for each runs, handle the data\n  handle.runs<- sapply(1:length(end.pos),function(x,data.mat=temp.mat.for.activity)\n  {\n    select.data<-data.mat[start.pos[x]:end.pos[x],]\n    combine.data<- c(min(select.data$date.time),sum(select.data$Interval),max(select.data$Activity),sum(select.data$METs) )\n    return(combine.data)\n  }, simplify=F\n  )\n  ############### combine each run\n  combined.temp.mat.for.activity<-data.frame(do.call(rbind,handle.runs))\n  colnames(combined.temp.mat.for.activity)<-c(\"date.time\", \"Interval\", \"ActivityCode\",\"METs\")\n  ###############\n  ###############Calculation\n  ###############\n  ###\n  temp.activity<-subset(combined.temp.mat.for.activity,combined.temp.mat.for.activity$ActivityCode==2)$Interval\n  ###\n\n  length.temp.activity<-length(temp.activity)\n  total.number.of.activity.bouts<- length.temp.activity\n  mean.activity.bout.length<- mean(temp.activity) /60/60\n\n  prop.of.activity.time.greater.5min<- 100*length(temp.activity[temp.activity>5*60])/length.temp.activity\n  prop.of.activity.time.greater.10min<- 100*length(temp.activity[temp.activity>10*60])/length.temp.activity\n  prop.of.activity.time.greater.30min<- 100*length(temp.activity[temp.activity>30*60])/length.temp.activity\n\n  total.activity.time.greater.5min<- sum(temp.activity[temp.activity>5*60])/60/60\n  total.activity.time.greater.10min<- sum(temp.activity[temp.activity>10*60])/60/60\n  total.activity.time.greater.30min<- sum(temp.activity[temp.activity>30*60])/60/60\n\n  quantile.activity.temp<-quantile(temp.activity, probs = c(0.05,0.25,0.5,0.75,0.95))/60/60\n  percentile.activity.time.5<- quantile.activity.temp[1]\n  percentile.activity.time.25<- quantile.activity.temp[2]\n  percentile.activity.time.50<- quantile.activity.temp[3]\n  percentile.activity.time.75<- quantile.activity.temp[4]\n  percentile.activity.time.95<- quantile.activity.temp[5]\n\n  alpha.activity<- 1+ 1/mean(log(temp.activity/ min(temp.activity)))\n  gini.index.activity<- gini(temp.activity)\n  step.hour<- sum(subset(temp.mat,temp.mat$ActivityCode==2)$Interval) /60/60\n  stand.hour<- sum(subset(temp.mat,temp.mat$ActivityCode==1)$Interval) /60/60\n\n  stepping.to.standing.ratio<- step.hour/stand.hour\n\n  table<- cbind(total.number.of.activity.bouts,mean.activity.bout.length,prop.of.activity.time.greater.5min,prop.of.activity.time.greater.10min,prop.of.activity.time.greater.30min,total.activity.time.greater.5min,total.activity.time.greater.10min,total.activity.time.greater.30min,percentile.activity.time.5,percentile.activity.time.25,percentile.activity.time.50,percentile.activity.time.75,percentile.activity.time.95,alpha.activity,gini.index.activity,stepping.to.standing.ratio)\n  colnames(table)<- c(\"total.number.of.activity.bouts\",\"mean.activity.bout.length\",\"prop.of.activity.time.greater.5min\",\"prop.of.activity.time.greater.10min\",\"prop.of.activity.time.greater.30min\",\"total.activity.time.greater.5min\",\"total.activity.time.greater.10min\",\"total.activity.time.greater.30min\",\"percentile.activity.time.5\",\"percentile.activity.time.25\",\"percentile.activity.time.50\",\"percentile.activity.time.75\",\"percentile.activity.time.95\",\"alpha.activity\",\"gini.index.activity\",\"stepping.to.standing.ratio\")\n  out=list( total.number.of.activity.bouts=total.number.of.activity.bouts,mean.activity.bout.length=mean.activity.bout.length,prop.of.activity.time.greater.5min=prop.of.activity.time.greater.5min,prop.of.activity.time.greater.10min=prop.of.activity.time.greater.10min,prop.of.activity.time.greater.30min=prop.of.activity.time.greater.30min,total.activity.time.greater.5min=total.activity.time.greater.5min,total.activity.time.greater.10min=total.activity.time.greater.10min,total.activity.time.greater.30min=total.activity.time.greater.30min,percentile.activity.time.5=percentile.activity.time.5,percentile.activity.time.25=percentile.activity.time.25,percentile.activity.time.50=percentile.activity.time.50,percentile.activity.time.75=percentile.activity.time.75,percentile.activity.time.95=percentile.activity.time.95,alpha.activity=alpha.activity,gini.index.activity=gini.index.activity,stepping.to.standing.ratio=stepping.to.standing.ratio,table=table)\n  return(out)\n}\n",
    "created" : 1450303758968.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "155497723",
    "id" : "6BAD78A6",
    "lastKnownWriteTime" : 1450303767,
    "path" : "~/wear/R/Activity_summary.R",
    "project_path" : "R/Activity_summary.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_source"
}